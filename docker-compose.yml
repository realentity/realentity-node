version: '3.8'

networks:
  realentity-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  # Bootstrap Node - Entry point for the network
  bootstrap:
    build: .
    container_name: realentity-bootstrap
    hostname: bootstrap
    networks:
      realentity-net:
        ipv4_address: 172.20.0.10
    ports:
      - "4001:4001"  # Expose bootstrap port to host
    environment:
      - NODE_TYPE=bootstrap
      - PUBLIC_IP=172.20.0.10
    volumes:
      - ./configs/bootstrap-config.json:/root/config.json
    command: ["./realentity-node"]
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4001"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Peer Node 1
  peer1:
    build: .
    container_name: realentity-peer1
    hostname: peer1
    networks:
      realentity-net:
        ipv4_address: 172.20.0.11
    environment:
      - NODE_TYPE=peer
      - BOOTSTRAP_PEER=/ip4/172.20.0.10/tcp/4001/p2p/BOOTSTRAP_ID_PLACEHOLDER
    volumes:
      - ./configs/peer-config.json:/root/config.json
    depends_on:
      bootstrap:
        condition: service_healthy
    command: ["./realentity-node"]

  # Peer Node 2
  peer2:
    build: .
    container_name: realentity-peer2
    hostname: peer2
    networks:
      realentity-net:
        ipv4_address: 172.20.0.12
    environment:
      - NODE_TYPE=peer
      - BOOTSTRAP_PEER=/ip4/172.20.0.10/tcp/4001/p2p/BOOTSTRAP_ID_PLACEHOLDER
    volumes:
      - ./configs/peer-config.json:/root/config.json
    depends_on:
      bootstrap:
        condition: service_healthy
    command: ["./realentity-node"]

  # Peer Node 3
  peer3:
    build: .
    container_name: realentity-peer3
    hostname: peer3
    networks:
      realentity-net:
        ipv4_address: 172.20.0.13
    environment:
      - NODE_TYPE=peer
      - BOOTSTRAP_PEER=/ip4/172.20.0.10/tcp/4001/p2p/BOOTSTRAP_ID_PLACEHOLDER
    volumes:
      - ./configs/peer-config.json:/root/config.json
    depends_on:
      bootstrap:
        condition: service_healthy
    command: ["./realentity-node"]

  # Peer Node 4
  peer4:
    build: .
    container_name: realentity-peer4
    hostname: peer4
    networks:
      realentity-net:
        ipv4_address: 172.20.0.14
    environment:
      - NODE_TYPE=peer
      - BOOTSTRAP_PEER=/ip4/172.20.0.10/tcp/4001/p2p/BOOTSTRAP_ID_PLACEHOLDER
    volumes:
      - ./configs/peer-config.json:/root/config.json
    depends_on:
      bootstrap:
        condition: service_healthy
    command: ["./realentity-node"]

  # Additional peer nodes can be easily added...
  # peer5:
  #   build: .
  #   container_name: realentity-peer5
  #   hostname: peer5
  #   networks:
  #     realentity-net:
  #       ipv4_address: 172.20.0.15
  #   environment:
  #     - NODE_TYPE=peer
  #     - BOOTSTRAP_PEER=/ip4/172.20.0.10/tcp/4001/p2p/BOOTSTRAP_ID_PLACEHOLDER
  #   volumes:
  #     - ./configs/peer-config.json:/root/config.json
  #   depends_on:
  #     bootstrap:
  #       condition: service_healthy
  #   command: ["./realentity-node"]
